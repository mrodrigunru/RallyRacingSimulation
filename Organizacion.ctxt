#BlueJ class context
comment0.target=Organizacion
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Organizacion\ here.\r\n\ \r\n\ @author\ Manuel\ Rodriguez\ &&\ Marcos\ Santos\r\n\ @version\ 1.0\r\n
comment1.params=mgcirc
comment1.target=Organizacion(MegaComparadorCircuitos)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Organization.\ Es\ privado\ debido\ al\ Singleton\r\n
comment10.params=
comment10.target=java.util.LinkedHashMap\ getEscuderias()
comment10.text=\r\n\ Metodo\ que\ devuelve\ el\ map\ de\ las\ escuderias\r\n\ \r\n\ @return\ la\ lista\ de\ escuderias\r\n
comment11.params=escuderia
comment11.target=void\ nuevaEscuder\u00EDa(Escuderia)
comment11.text=\r\n\ Metodo\ que\ a\u00F1ade\ una\ nueva\ escuderia\ a\ la\ lista\r\n\ \r\n\ @param\ escuderia\ la\ escuderia\ a\ a\u00F1adir\r\n
comment12.params=
comment12.target=java.util.ArrayList\ getPilotosCarrera()
comment12.text=\r\n\ Metodo\ que\ devuelve\ la\ lista\ de\ pilotos\ que\ hay\ en\ la\ carrera\r\n\ \r\n\ @return\ la\ lista\ de\ pilotos\r\n
comment13.params=piloto
comment13.target=void\ nuevoPilotoCarrera(Piloto)
comment13.text=\r\n\ Metodo\ que\ a\u00F1ade\ un\ nuevo\ piloto\ a\ la\ lista\ de\ carrera\r\n\ \r\n\ @paran\ el\ piloto\ a\ a\u00F1adir\r\n
comment14.params=
comment14.target=void\ mostrarEscuderias()
comment14.text=\r\n\ Metodo\ que\ muestra\ todas\ las\ escuderias\ del\ campeonato\r\n\ \r\n\ @throws\ IOException\r\n
comment15.params=
comment15.target=void\ mostrarCircuitos()
comment15.text=\r\n\ Metodo\ que\ muestra\ todos\ los\ circuitos\ del\ campeonato\r\n\ \r\n\ @throws\ IOException\ \r\n
comment16.params=
comment16.target=int\ condicionFinalizacion()
comment16.text=\r\n\ Metodo\ que\ indica\ si\ debe\ finalizar\ el\ campeonato\ y\ de\ que\ forma\r\n\ \r\n\ @return\ la\ forma\ en\ que\ debe\ acabar\r\n
comment17.params=chain
comment17.target=void\ print(java.lang.String)
comment17.text=\r\n\r\n\ It\ prints\ a\ chain\ both\ in\ logFile\ and\ console\r\n\ \r\n\ @throws\ IOException\ if\ there\ is\ an\ error\ in\ Input/Output\ operations\r\n
comment18.params=number\ digits
comment18.target=double\ decimals(double,\ int)
comment18.text=\r\n\ @param\ number\ the\ number\ which\ precision\ we\ want\ to\ correct\r\n\ @param\ digits\ the\ number\ of\ decimals\ we\ want\ number\ to\ have\r\n\ \r\n\ @return\ the\ number\ with\ his\ presision\ corrected\r\n
comment19.params=
comment19.target=void\ competir()
comment19.text=\r\n\ Metodo\ que\ se\ encarga\ de\ llevar\ a\ cabo\ la\ competici\u00F3n\ \r\n
comment2.params=megcirc
comment2.target=Organizacion\ getInstance(MegaComparadorCircuitos)
comment2.text=\r\n\ Singleton\ Pattern.\ Chequea\ que\ solo\ hay\ una\ unica\ instancia\ de\ la\ clase\r\n\ \r\n\ @param\ \ \ \ (no\ params\ needed)\r\n\ @return\ \ \ La\ instancia\ actual\ de\ la\ clase\r\n
comment20.params=
comment20.target=void\ entregaPremios()
comment20.text=\ \r\n\ Metodo\ que\ se\ encarga\ de\ llegar\ a\ cabo\ la\ entrega\ de\ premios\ del\ campeonato\r\n
comment3.params=instance
comment3.target=void\ setInstance(Organizacion)
comment3.text=\r\n\ PRE\:{El\ item\ debe\ estar\ inicializado}\r\n\ \r\n\ POST\:{It\ sets\ an\ instance\ of\ Organizacion\ }\r\n\ \r\n\ @param\ instance\ The\ instance\ of\ Organizacion\r\n
comment4.params=
comment4.target=int\ getLimiteAbandonos()
comment4.text=\r\n\ Metodo\ que\ devuelve\ el\ limite\ de\ abandonos\ de\ un\ piloto\r\n\ \r\n\ \r\n\ @return\ \ \ \ el\ limite\ del\ abandonos\r\n
comment5.params=
comment5.target=int\ getLimitePilotos()
comment5.text=\r\n\ Metodo\ que\ devuelve\ el\ numero\ maximo\ de\ `pilotos\ que\ pueden\ competir\r\n\ \r\n\ \r\n\ @return\ \ \ \ \ limite\ de\ pilotos\r\n
comment6.params=limA
comment6.target=void\ setLimiteAbandonos(int)
comment6.text=\r\n\ Metodo\ que\ actualiza\ el\ limite\ de\ abandonos\r\n\ \r\n\ @param\ limA\ limite\ de\ abandonos\r\n
comment7.params=limP
comment7.target=void\ setLimitePilotos(int)
comment7.text=\r\n\ Metodo\ que\ actualiza\ el\ limite\ de\ pilotos\r\n\ \r\n\ @param\ limP\ limite\ de\ pilotos\r\n
comment8.params=
comment8.target=java.util.TreeSet\ getCircuitos()
comment8.text=\r\n\ Metodo\ que\ devuelve\ el\ TreeSet\ que\ contiene\ a\ los\ circuitos\r\n\ \r\n\ @return\ la\ lista\ de\ circuitos\r\n
comment9.params=circuito
comment9.target=void\ nuevoCircuito(Circuito)
comment9.text=\r\n\ Metodo\ que\ a\u00F1ade\ un\ nuevo\ circuito\ a\ la\ lista\r\n\ \r\n\ @param\ circuito\ el\ circuito\ a\ a\u00F1adir\r\n
numComments=21
