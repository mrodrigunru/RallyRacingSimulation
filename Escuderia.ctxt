#BlueJ class context
comment0.target=Escuderia
comment0.text=\r\n\ Represenata\ a\ cada\ escuder\u00EDa\ en\ la\ competicion\r\n\ \r\n\ @author\ Manuel\ Rodriguez\ &&\ Marcos\ Santos\r\n\ @version\ 1.0\r\n
comment1.params=nombre\ mgp\ mgc
comment1.target=Escuderia(java.lang.String,\ MegaComparadorPilotos,\ MegaComparadorCoches)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Escuderia\r\n\ \r\n\ @param\ nombre\ Nombre\ de\ la\ escuderia\r\n\ @param\ mgp\ comparador\ de\ pilotos\ asociado\ a\ la\ escuderia\r\n\ @param\ mgc\ comparador\ de\ coches\ asociado\ a\ la\ escuderia\r\n
comment10.params=
comment10.target=int\ contarPilotos()
comment10.text=\r\n\ Metodo\ que\ devuelve\ el\ numero\ de\ pilotos\ que\ hay\ en\ la\ lista\r\n\ \r\n\ @return\ valor\ de\ tama\u00F1o\ de\ la\ lista\ de\ pilotos\r\n
comment11.params=
comment11.target=java.util.ArrayList\ getCoches()
comment11.text=\r\n\ Metodo\ que\ devuelve\ un\ ArrayList\ con\ los\ coches\ de\ la\ escuderia\r\n\ \r\n\ @param\ \ none\r\n\ @return\ \ \ \ \ ArrayList\ de\ coches\r\n
comment12.params=coche
comment12.target=void\ nuevoCoche(Coche)
comment12.text=\r\n\ Metodo\ que\ a\u00F1ade\ un\ coche\ a\ la\ lista\ de\ coches\r\n\ \r\n\ @param\ coche\ el\ coche\ a\ a\u00F1adir\r\n
comment13.params=mgc
comment13.target=void\ ordenarCoches(MegaComparadorCoches)
comment13.text=\r\n\ Metodo\ que\ ordena\ la\ lista\ de\ coches\ \r\n\ \r\n\ @param\ mgc\ comparador\ por\ el\ cual\ se\ rige\ la\ ordenacion\r\n
comment14.params=
comment14.target=int\ totalPuntosEscuderia()
comment14.text=\r\n\ Metodo\ que\ calcula\ el\ total\ de\ puntos\ de\ una\ escuderia\r\n\ \r\n\ @return\ total\ de\ puntos\ acumulasdos\r\n
comment15.params=
comment15.target=boolean\ todosDescalificados()
comment15.text=\r\n\ Metodo\ que\ calcula\ si\ todos\ los\ pilotos\ de\ una\ escuderia\ han\ sido\ descalificados\r\n\ \r\n\ @return\ codicion\ de\ descalificacion\ \r\n
comment16.params=i
comment16.target=Coche\ sacarCoche(int)
comment16.text=\r\n\ Saca\ el\ primer\ coche\ de\ la\ lista,\ lo\ devuelve\ y\ lo\ vuelve\ a\ insertar\ al\ final\r\n\ \r\n\ @return\ el\ primer\ coche\ de\ la\ lista\r\n
comment17.params=
comment17.target=int\ contarCoches()
comment17.text=\r\n\ Metodo\ que\ cuenta\ cuantos\ coches\ hay\ en\ la\ lista\ de\ coches\r\n\ \r\n\ @return\ tama\u00F1o\ de\ la\ lista\ de\ coches\r\n
comment18.params=chain
comment18.target=void\ print(java.lang.String)
comment18.text=\r\n\r\n\ It\ prints\ a\ chain\ both\ in\ logFile\ and\ console\r\n\ \r\n\ @throws\ IOException\ if\ there\ is\ an\ error\ in\ Input/Output\ operations\r\n
comment19.params=
comment19.target=void\ asignarCoches()
comment19.text=\r\n\ Metodo\ que\ asigna\ coches\ a\ los\ pilotos\ de\ un\ escuderia\r\n\ \r\n\ @throws\ IOException\r\n
comment2.params=
comment2.target=MegaComparadorPilotos\ getMgp()
comment2.text=\r\n\ Metodo\ que\ devuelve\ el\ comparador\ de\ pilotos\ asociado\ a\ la\ escuderia\r\n\ \r\n\ @return\ el\ comparador\ de\ pilotos\ asociado\ a\ la\ escuderia\r\n
comment20.params=
comment20.target=void\ bajarseDelCoche()
comment20.text=\r\n\ Metodo\ que\ desasigna\ los\ coches\ de\ los\ pilotos\r\n
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\r\n\ Metodo\ que\ imprime\ las\ caracteristicas\ de\ la\ escuderia\r\n
comment22.params=
comment22.target=void\ mostrarCadaEscuderia()
comment22.text=\r\n\ Metodo\ que\ muestra\ los\ componentes\ de\ la\ escuderia\r\n
comment3.params=
comment3.target=MegaComparadorCoches\ getMgc()
comment3.text=\r\n\ Metodo\ que\ devuelve\ el\ comparador\ de\ pilotos\ asociado\ a\ la\ escuderia\r\n\ \r\n\ @return\ el\ comparador\ de\ pilotos\ asociado\ a\ la\ escuderia\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getPilotos()
comment4.text=\r\n\ Metodo\ que\ devuelve\ un\ ArrayList\ con\ los\ pilotos\ de\ la\ escuderia\r\n\ \r\n\ @param\ \ none\r\n\ @return\ \ \ \ \ ArrayList\ de\ Pilotos\r\n
comment5.params=piloto
comment5.target=void\ nuevoPiloto(Piloto)
comment5.text=\r\n\ Metodo\ que\ a\u00F1ade\ un\ nuevo\ piloto\ a\ la\ lista\r\n\ \r\n\ @param\ piloto\ el\ piloto\ a\ a\u00F1adir\r\n
comment6.params=mgp
comment6.target=void\ ordenarPilotos(MegaComparadorPilotos)
comment6.text=\r\n\ Metodo\ que\ oredena\ la\ lista\ de\ pilotos\r\n\ \r\n\ @param\ mgp\ el\ comparador\ por\ el\ que\ se\ rige\ la\ ordenacion\r\n
comment7.params=
comment7.target=java.lang.String\ getNombre()
comment7.text=\r\n\ Metodo\ que\ devuelve\ el\ nombre\ de\ la\ escuderia\r\n\ \r\n\ @return\ nombre\ de\ la\ escuderia\r\n
comment8.params=nombre
comment8.target=void\ setNombre(java.lang.String)
comment8.text=\r\n\ Metodo\ que\ actualiza\ el\ nombre\ de\ la\ escuderia\r\n\ \r\n\ @param\ nombre\ nombre\ de\ la\ escuderia\r\n
comment9.params=i
comment9.target=Piloto\ sacarPiloto(int)
comment9.text=\r\n\ Saca\ el\ primer\ piloto\ de\ la\ lista\ que\ no\ este\ descalificado,\ lo\ devuelve\r\n\ \r\n\ @return\ el\ primer\ piloto\ de\ la\ lista\r\n
numComments=23
