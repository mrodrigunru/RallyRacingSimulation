#BlueJ class context
comment0.target=Piloto
comment0.text=\r\n\ Clase\ que\ gestiona\ todos\ los\ campos\ relacionados\ con\ los\ pilotods\r\n\ \r\n\ @author\ Manuel\ Rodriguez\ &&\ Marcos\ Santos\ \r\n\ @version\ 1.0\r\n
comment1.params=nombre\ concentracion
comment1.target=Piloto(java.lang.String,\ Concentracion)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Piloto\r\n\ \r\n\ @param\ nombre\:\ \ \ nombre\ del\ piloto\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ concentracion\ del\ piloto\r\n\ \ \ \ \ \ \ \ \r\n
comment10.params=nomCircuito\ tiempo\ puntos
comment10.target=void\ crearEntradaResultados(java.lang.String,\ double,\ double)
comment10.text=\r\n\ Metodo\ que\ crea\ una\ entrada\ de\ la\ calse\ resultados\ con\ los\ parametros\ dados\r\n\ \r\n\ @param\ nomCircuito\ nombre\ del\ circuito\r\n\ @param\ tiempo\ tiempo\ en\ ese\ circuito\r\n\ @param\ puntos\ puntos\ conseguidos\ en\ ese\ circuito\r\n
comment11.params=nomCircuito\ tiempo
comment11.target=void\ setTiempoEnCircuito(java.lang.String,\ double)
comment11.text=\r\n\ Metodo\ que\ actualiza\ el\ tiempo\ en\ un\ circuito\ \r\n\ \r\n\ @param\ nomCircuito\ el\ nombre\ del\ circuito\r\n\ @param\ tiempo\ el\ tiempo\ en\ dicho\ circuito\r\n
comment12.params=nomCircuito\ puntos
comment12.target=void\ setPuntosEnCircuito(java.lang.String,\ double)
comment12.text=\r\n\ Metodo\ que\ actualiza\ los\ puntos\ en\ un\ circuito\r\n\ \r\n\ @param\ nomCircuito\ nombre\ del\ circuito\r\n\ @param\ puntos\ puntos\ en\ dicho\ circuito\r\n
comment13.params=nomCircuito
comment13.target=double\ getPuntosEnCircuito(java.lang.String)
comment13.text=\r\n\ Metodo\ que\ devuelve\ los\ puntos\ en\ un\ circuito\r\n\ \r\n\ @param\ nomCircuito\ nombre\ del\ circuito\r\n\ @return\ puntos\ puntos\ en\ dicho\ circuito\r\n
comment14.params=
comment14.target=void\ anularPuntos()
comment14.text=\ \r\n\ Metodo\ que\ anula\ los\ puntos\ conseguidos\ a\ un\ piloto\r\n
comment15.params=
comment15.target=int\ getPuntosAcumulados()
comment15.text=\r\n\ Metodo\ que\ devuelve\ el\ total\ de\ puntos\ de\ un\ piloto\r\n\ \r\n\ @return\ total\ de\ puntos\ acumulados\r\n
comment16.params=puntos
comment16.target=void\ sumarPuntosAcumulados(int)
comment16.text=\r\n\ Metodo\ que\ actualiza\ los\ puntos\ acumulados\r\n\ \r\n\ @paran\ puntos\ puntos\ a\ sumar\r\n
comment17.params=
comment17.target=int\ getParticipacionEnCarreras()
comment17.text=\r\n\ Metodo\ que\ devuelve\ la\ paritipacion\ en\ las\ carreras\r\n\ \r\n\ @return\ total\ de\ participaciones\r\n
comment18.params=
comment18.target=void\ sumarUnaParticipacionEnCarreras()
comment18.text=\r\n\ Metodo\ que\ suma\ una\ participacion\r\n
comment19.params=
comment19.target=int\ getCarrerasTerminadas()
comment19.text=\r\n\ Metodo\ que\ devuelve\ el\ total\ de\ carreras\ terminads\r\n\ \r\n\ @return\ total\ de\ terminads\r\n
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Metodo\ que\ devuelve\ el\ nombre\ del\ piloto\r\n\ \r\n\ @param\ \ \ (nada)\r\n\ @return\ \ \ \ \ el\ nombre\ del\ piloto\r\n
comment20.params=
comment20.target=void\ sumarUnaCarrerasTerminadas()
comment20.text=\r\n\ Metodo\ que\ suma\ una\ carrera\ terminada\r\n
comment21.params=
comment21.target=int\ getCarrerasAbandonadas()
comment21.text=\r\n\ Metodo\ que\ devuelve\ el\ total\ de\ abandonos\r\n\ \r\n\ @return\ total\ de\ abandonos\r\n
comment22.params=
comment22.target=void\ sumarUnaCarrerasAbandonadas()
comment22.text=\r\n\ Metodo\ que\ suma\ un\ abandono\r\n
comment23.params=
comment23.target=boolean\ getDescalificado()
comment23.text=\r\n\ Metodo\ que\ devuelve\ si\ un\ piloto\ esta\ descalificado\r\n\ \r\n\ @return\ T\ o\ F\ si\ esta\ descalificado\r\n
comment24.params=
comment24.target=java.util.HashMap\ getMapResultados()
comment24.text=\r\n\ Metodo\ que\ devuelve\ un\ map\ con\ los\ resultados\ en\ los\ circuitos\r\n\ \r\n\ @returm\ map\ de\ los\ resultados\r\n
comment25.params=descalificado
comment25.target=void\ setDescalificado(boolean)
comment25.text=\r\n\ Metodo\ que\ asigna\ la\ condicion\ de\ descalificado\ a\ unj\ piloto\r\n\ \r\n\ @param\ descalificado\ T\ o\ F\ si\ esta\ o\ no\ descalificado\r\n
comment26.params=
comment26.target=double\ getDestreza()
comment26.text=\r\n\ Metodo\ que\ devuelve\ la\ destreza\ del\ piloto\r\n\ \r\n\ @param\ \ (nada)\r\n\ @return\ \ \ \ \ destreza\ del\ piloto\r\n
comment27.params=destreza
comment27.target=void\ setDestreza(double)
comment27.text=\r\n\ Metodo\ que\ asigna\ la\ destreza\ del\ piloto\r\n\ \r\n\ @param\ \ destreza\ del\ piloto\r\n\ @return\ \ (nada)\r\n
comment28.params=
comment28.target=double\ calcularDestreza()
comment28.text=\r\n\ Metodo\ que\ calcula\ la\ destreza\ de\ un\ piloto\r\n
comment29.params=coche\ circuito
comment29.target=void\ conducir(Coche,\ Circuito)
comment29.text=\r\n\ Metodo\ que\ conduce\ el\ coche\r\n\ \r\n\ @param\ coche\ coche\ asignado\r\n\ @param\ circuito\ ciruito\ asignado\r\n\ \r\n\ @throws\ IOException\r\n
comment3.params=nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Metodo\ que\ asigna\ el\ nombre\ del\ piloto\r\n\ \r\n\ @param\ \ nombre\ del\ piloto\r\n\ @return\ \ (nada)\r\n
comment30.params=chain
comment30.target=void\ print(java.lang.String)
comment30.text=\r\n\r\n\ It\ prints\ a\ chain\ both\ in\ logFile\ and\ console\r\n\ \r\n\ @throws\ IOException\ if\ there\ is\ an\ error\ in\ Input/Output\ operations\r\n
comment31.params=number\ digits
comment31.target=double\ decimals(double,\ int)
comment31.text=\r\n\ @param\ number\ the\ number\ which\ precision\ we\ want\ to\ correct\r\n\ @param\ digits\ the\ number\ of\ decimals\ we\ want\ number\ to\ have\r\n\ \r\n\ @return\ the\ number\ with\ his\ presision\ corrected\r\n
comment32.params=
comment32.target=java.lang.String\ getTipoPiloto()
comment32.text=\r\n\ Metodo\ que\ devuelve\ las\ caracteristicas\ del\ piloto\r\n
comment33.params=
comment33.target=java.lang.String\ toString()
comment33.text=\r\n\ Metodo\ que\ imprime\ las\ caracteristicas\ del\ piloto\r\n
comment4.params=
comment4.target=Concentracion\ getConcentracion()
comment4.text=\r\n\ Metodo\ que\ devuelve\ la\ concentracion\ del\ piloto\r\n\ \r\n\ @param\ \ (none)\r\n\ @return\ \ \ \ \ concentracion\ del\ piloto\r\n
comment5.params=
comment5.target=double\ getValorConcentracion()
comment5.text=\r\n\ Metodo\ que\ devuelve\ el\ valor\ de\ la\ concentracion\ del\ piloto\r\n\ \r\n\ @param\ \ (none)\r\n\ @return\ \ \ \ \ valor\ de\ la\ concentracion\ del\ piloto\r\n
comment6.params=conc
comment6.target=void\ setConcentracion(Concentracion)
comment6.text=\r\n\ Metodo\ que\ asigna\ la\ concentracion\ del\ piloto\r\n\ \r\n\ @param\ \ concentracion\ del\ piloto\r\n\ @return\ \ (nada)\r\n
comment7.params=
comment7.target=Coche\ getCoche()
comment7.text=\r\n\ Metodo\ que\ devuelve\ el\ coche\ del\ piloto\r\n\ \r\n\ @param\ \ (none)\r\n\ @return\ \ \ \ \ coche\ del\ piloto\r\n
comment8.params=coche
comment8.target=void\ setCoche(Coche)
comment8.text=\r\n\ Metodo\ que\ asigna\ el\ coche\ del\ piloto\r\n\ \r\n\ @param\ \ coche\ del\ piloto\r\n\ @return\ \ (nada)\r\n
comment9.params=nomCircuito
comment9.target=double\ getTiempoEnCircuito(java.lang.String)
comment9.text=\r\n\ Metodo\ que\ devuelve\ el\ tiempo\ de\ un\ piloto\ en\ un\ circuito\r\n\ \r\n\ @param\ nomCircuito\ el\ nombre\ del\ circuito\r\n\ \r\n\ @return\ tiempo\ en\ ese\ circuito\r\n
numComments=34
