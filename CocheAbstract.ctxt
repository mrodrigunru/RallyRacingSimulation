#BlueJ class context
comment0.target=CocheAbstract
comment0.text=\r\n\ Abstract\ class\ CocheAbstract\ -\ maneja\ todos\ los\ campos\ relacionados\ con\ coche\r\n\ @author\:\ Manuel\ Rodriguez\ &&\ Marcos\ Santos\r\n\ Date\:\ 1.0\r\n
comment1.params=nombre\ velocidad\ combustible
comment1.target=CocheAbstract(java.lang.String,\ Velocidad,\ Combustible)
comment1.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\ \r\n\ @param\ \ y\ \ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ \ \ \ the\ sum\ of\ x\ and\ y\ \r\n
comment10.params=nombre
comment10.target=void\ setNombre(java.lang.String)
comment10.text=\r\n\ Metodo\ que\ asigna\ el\ nombre\ al\ coche\r\n\ \r\n\ @param\ \ \ nombre\ del\ coche\ \ \ \ \ \r\n\ @return\ \ (nada)\r\n
comment11.params=
comment11.target=Velocidad\ getVelocidad()
comment11.text=\r\n\ Metodo\ que\ devuelve\ la\ velocidad\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ velocidad\ del\ coche\r\n
comment12.params=
comment12.target=double\ getValorVelocidad()
comment12.text=\r\n\ Metodo\ que\ devuelve\ el\ valor\ de\ la\ velocidad\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ valor\ de\ la\ velocidad\ del\ coche\r\n
comment13.params=velocidad
comment13.target=void\ setVelocidad(Velocidad)
comment13.text=\r\n\ Metodo\ que\ asigna\ la\ velocidad\ al\ coche\r\n\ \r\n\ @param\ \ \ velocidad\ del\ coche\ \ \ \ \r\n\ @return\ \ (nada)\ \r\n
comment14.params=
comment14.target=Combustible\ getCombustible()
comment14.text=\r\n\ Metodo\ que\ devuelve\ la\ etiqueta\ del\ combustible\ original\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ combustible\ original\ del\ coche\r\n
comment15.params=
comment15.target=double\ getValorCombustible()
comment15.text=\r\n\ Metodo\ que\ devuelve\ el\ valor\ del\ combustible\ original\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ valor\ del\ combustible\ del\ coche\r\n
comment16.params=
comment16.target=double\ getCombustibleActual()
comment16.text=\r\n\ Metodo\ que\ devuelve\ el\ combustible\ actual\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ combustible\ actual\ del\ coche\r\n
comment17.params=combustible
comment17.target=void\ setCombustible(Combustible)
comment17.text=\r\n\ Metodo\ que\ asigna\ el\ valor\ del\ combustible\ original\ al\ coche\r\n\ \r\n\ @param\ \ \ combustible\ del\ coche\ \ \ \ \r\n\ @return\ \ (nada)\ \r\n
comment18.params=combustible
comment18.target=void\ setCombustibleActual(double)
comment18.text=\r\n\ Metodo\ que\ asigna\ el\ valor\ del\ combustible\ actual\ al\ coche\r\n\ \r\n\ @param\ \ \ combustible\ del\ coche\ \ \ \ \r\n\ @return\ \ (nada)\ \r\n
comment19.params=number\ digits
comment19.target=double\ decimals(double,\ int)
comment19.text=\r\n\ @param\ number\ the\ number\ which\ precision\ we\ want\ to\ correct\r\n\ @param\ digits\ the\ number\ of\ decimals\ we\ want\ number\ to\ have\r\n\ \r\n\ @return\ the\ number\ with\ his\ presision\ corrected\r\n
comment2.params=destreza\ complejidad
comment2.target=double\ velocidadReal(double,\ double)
comment2.text=\r\n\ Calcula\ la\ velocidad\ real\ de\ los\ coches\ en\ el\ cirucito\r\n\ \r\n\ @param\ \ \ \r\n\ \ \ \ \ \ \ \ \ \ double\ destreza\:\ destreza\ del\ piloto\r\n\ \ \ \ \ \ \ \ \ \ Complejidad\ complejidad\:\ complejidad\ del\ circuito\r\n\ @return\ \ \ \ \ \ \ \ double\ velocidadReal\:\ la\ velocidad\ real\ del\ coche\r\n
comment20.params=chain
comment20.target=void\ print(java.lang.String)
comment20.text=\r\n\r\n\ It\ prints\ a\ chain\ both\ in\ logFile\ and\ console\r\n\ \r\n\ @throws\ IOException\ if\ there\ is\ an\ error\ in\ Input/Output\ operations\r\n
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\r\n\ M\u00E9todo\ que\ imprime\ las\ caracteristicas\ del\ Coche\r\n
comment3.params=
comment3.target=double\ getVelReal()
comment3.text=\r\n\ devuelve\ la\ velocidad\ real\ del\ coche\r\n\ \r\n\ @return\ double\ velocidadReal\ \:\ la\ valocidad\ real\ del\ coche\r\n
comment4.params=vel
comment4.target=void\ setVelReal(double)
comment4.text=\r\n\ Actualiza\ la\ velocidad\ real\ del\ coche\r\n\ \r\n\ @param\ double\ vel\:\ el\ nuevo\ valor\ de\ la\ velocidad\ real\ \r\n\ \r\n
comment5.params=
comment5.target=void\ setNoFuel()
comment5.text=\r\n\ Metodo\ que\ actualiza\ cuando\ un\ coche\ se\ queda\ sin\ combustible\r\n\ \r\n
comment6.params=
comment6.target=boolean\ getNoFuel()
comment6.text=\r\n\ Metodo\ que\ devuelve\ si\ el\ coche\ se\ ha\ quedado\ sin\ combustible\r\n
comment7.params=distancia\ velocidadReal
comment7.target=double\ tiempoEnTerminar(double,\ double)
comment7.text=\r\n\ Calcula\ el\ tiempo\ en\ terminar\ de\ los\ coches\ en\ el\ circuito\r\n\ \r\n\ @param\ \ \ Distancia\ distancia\:\ distancia\ del\ circuito\r\n\ \ \ \ \ \ \ \ \ \ double\ velocidadReal\:\ velocidad\ real\ del\ coche\r\n\ @return\ \ \ \ \ \ \ \ double\ tiempoEnTerminar\:\ el\ tiempo\ que\ tarda\ un\ coche\ en\ completar\ el\ circuito\r\n
comment8.params=combustible\ tiempoEnTerminar
comment8.target=double\ combustibleRestante(double,\ double)
comment8.text=\r\n\ Calcula\ el\ combustible\ que\ queda\ en\ el\ coche\ al\ terminar\ el\ circuito\r\n\ \r\n\ @param\ \ \ Combustible\ combustible\:\ combustible\ del\ coche\r\n\ \ \ \ \ \ \ \ \ \ double\ tiempoEnTerminar\:\ tiempo\ que\ tarda\ un\ coche\ en\ completar\ el\ circuito\r\n\ @return\ \ \ \ \ \ \ \ double\ combustibleRestante\:\ el\ combustible\ restante\ del\ coche\r\n
comment9.params=
comment9.target=java.lang.String\ getNombre()
comment9.text=\r\n\ Metodo\ que\ devuelve\ el\ nombre\ del\ coche\r\n\ \r\n\ @param\ \ \ (nada)\ \ \ \ \ \r\n\ @return\ \ nombre\ del\ coche\r\n
numComments=22
